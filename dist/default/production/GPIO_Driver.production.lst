

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Sep 21 15:08:23 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   0015CC                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _port_register
    64   0015CC  80                 	db	128
    65   0015CD  0F                 	db	15
    66   0015CE  81                 	db	129
    67   0015CF  0F                 	db	15
    68   0015D0  82                 	db	130
    69   0015D1  0F                 	db	15
    70   0015D2  83                 	db	131
    71   0015D3  0F                 	db	15
    72   0015D4  84                 	db	132
    73   0015D5  0F                 	db	15
    74                           
    75                           ;initializer for _lat_register
    76   0015D6  89                 	db	137
    77   0015D7  0F                 	db	15
    78   0015D8  8A                 	db	138
    79   0015D9  0F                 	db	15
    80   0015DA  8B                 	db	139
    81   0015DB  0F                 	db	15
    82   0015DC  8C                 	db	140
    83   0015DD  0F                 	db	15
    84   0015DE  8D                 	db	141
    85   0015DF  0F                 	db	15
    86                           
    87                           ;initializer for _tris_register
    88   0015E0  92                 	db	146
    89   0015E1  0F                 	db	15
    90   0015E2  93                 	db	147
    91   0015E3  0F                 	db	15
    92   0015E4  94                 	db	148
    93   0015E5  0F                 	db	15
    94   0015E6  95                 	db	149
    95   0015E7  0F                 	db	15
    96   0015E8  96                 	db	150
    97   0015E9  0F                 	db	15
    98                           
    99                           ;initializer for _ret
   100   0015EA  01                 	db	1
   101                           
   102                           ;initializer for _kaypad_1
   103   0015EB  02                 	db	2
   104   0015EC  0A                 	db	10
   105   0015ED  12                 	db	18
   106   0015EE  1A                 	db	26
   107   0015EF  62                 	db	98
   108   0015F0  6A                 	db	106
   109   0015F1  72                 	db	114
   110   0015F2  7A                 	db	122
   111                           
   112                           	psect	smallconst
   113   001000                     __psmallconst:
   114                           	callstack 0
   115   001000  00                 	db	0
   116   001001                     _btn_values:
   117                           	callstack 0
   118   001001  37                 	db	55
   119   001002  38                 	db	56
   120   001003  39                 	db	57
   121   001004  2F                 	db	47
   122   001005  34                 	db	52
   123   001006  35                 	db	53
   124   001007  36                 	db	54
   125   001008  2A                 	db	42
   126   001009  31                 	db	49
   127   00100A  32                 	db	50
   128   00100B  33                 	db	51
   129   00100C  2D                 	db	45
   130   00100D  23                 	db	35
   131   00100E  30                 	db	48
   132   00100F  3D                 	db	61
   133   001010  2B                 	db	43
   134   001011                     __end_of_btn_values:
   135                           	callstack 0
   136   000000                     _PORTE	set	3972
   137   000000                     _PORTD	set	3971
   138   000000                     _PORTC	set	3970
   139   000000                     _PORTB	set	3969
   140   000000                     _PORTA	set	3968
   141   000000                     _LATA	set	3977
   142   000000                     _TRISA	set	3986
   143   000000                     _TRISE	set	3990
   144   000000                     _TRISD	set	3989
   145   000000                     _TRISC	set	3988
   146   000000                     _TRISB	set	3987
   147   000000                     _LATE	set	3981
   148   000000                     _LATD	set	3980
   149   000000                     _LATC	set	3979
   150   000000                     _LATB	set	3978
   151   001011  00                 	db	0	; dummy byte at the end
   152   000000                     
   153                           ; #config settings
   154                           
   155                           	psect	cinit
   156   001596                     __pcinit:
   157                           	callstack 0
   158   001596                     start_initialization:
   159                           	callstack 0
   160   001596                     __initialization:
   161                           	callstack 0
   162                           
   163                           ; Initialize objects allocated to COMRAM (39 bytes)
   164                           ; load TBLPTR registers with __pidataCOMRAM
   165   001596  0ECC               	movlw	low __pidataCOMRAM
   166   001598  6EF6               	movwf	tblptrl,c
   167   00159A  0E15               	movlw	high __pidataCOMRAM
   168   00159C  6EF7               	movwf	tblptrh,c
   169   00159E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   170   0015A0  6EF8               	movwf	tblptru,c
   171   0015A2  EE00  F001         	lfsr	0,__pdataCOMRAM
   172   0015A6  EE10 F027          	lfsr	1,39
   173   0015AA                     copy_data0:
   174   0015AA  0009               	tblrd		*+
   175   0015AC  CFF5 FFEE          	movff	tablat,postinc0
   176   0015B0  50E5               	movf	postdec1,w,c
   177   0015B2  50E1               	movf	fsr1l,w,c
   178   0015B4  E1FA               	bnz	copy_data0
   179                           
   180                           ; Clear objects allocated to COMRAM (16 bytes)
   181   0015B6  EE00  F040         	lfsr	0,__pbssCOMRAM
   182   0015BA  0E10               	movlw	16
   183   0015BC                     clear_0:
   184   0015BC  6AEE               	clrf	postinc0,c
   185   0015BE  06E8               	decf	wreg,f,c
   186   0015C0  E1FD               	bnz	clear_0
   187   0015C2                     end_of_initialization:
   188                           	callstack 0
   189   0015C2                     __end_of__initialization:
   190                           	callstack 0
   191   0015C2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   192   0015C4  6EF8               	movwf	tblptru,c
   193   0015C6  0100               	movlb	0
   194   0015C8  EFFA  F00A         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMRAM
   197   000040                     __pbssCOMRAM:
   198                           	callstack 0
   199   000040                     relay_turn_off@F2880:
   200                           	callstack 0
   201   000040                     	ds	1
   202   000041                     relay_turn_on@F2875:
   203                           	callstack 0
   204   000041                     	ds	1
   205   000042                     relay_initialize@F2870:
   206                           	callstack 0
   207   000042                     	ds	1
   208   000043                     led_toggle_logic@F2891:
   209                           	callstack 0
   210   000043                     	ds	1
   211   000044                     led_turn_off@F2886:
   212                           	callstack 0
   213   000044                     	ds	1
   214   000045                     led_turn_on@F2881:
   215                           	callstack 0
   216   000045                     	ds	1
   217   000046                     led_initialize@F2876:
   218                           	callstack 0
   219   000046                     	ds	1
   220   000047                     Dc_motor_stop@F2900:
   221                           	callstack 0
   222   000047                     	ds	1
   223   000048                     Dc_motor_stop@F2898:
   224                           	callstack 0
   225   000048                     	ds	1
   226   000049                     Dc_motor_turn_right@F2893:
   227                           	callstack 0
   228   000049                     	ds	1
   229   00004A                     Dc_motor_turn_right@F2891:
   230                           	callstack 0
   231   00004A                     	ds	1
   232   00004B                     Dc_motor_turn_left@F2886:
   233                           	callstack 0
   234   00004B                     	ds	1
   235   00004C                     Dc_motor_turn_left@F2884:
   236                           	callstack 0
   237   00004C                     	ds	1
   238   00004D                     Dc_motor_initialize@F2877:
   239                           	callstack 0
   240   00004D                     	ds	1
   241   00004E                     Dc_motor_initialize@F2875:
   242                           	callstack 0
   243   00004E                     	ds	1
   244   00004F                     _val:
   245                           	callstack 0
   246   00004F                     	ds	1
   247                           
   248                           	psect	dataCOMRAM
   249   000001                     __pdataCOMRAM:
   250                           	callstack 0
   251   000001                     _port_register:
   252                           	callstack 0
   253   000001                     	ds	10
   254   00000B                     _lat_register:
   255                           	callstack 0
   256   00000B                     	ds	10
   257   000015                     _tris_register:
   258                           	callstack 0
   259   000015                     	ds	10
   260   00001F                     _ret:
   261                           	callstack 0
   262   00001F                     	ds	1
   263   000020                     _kaypad_1:
   264                           	callstack 0
   265   000020                     	ds	8
   266                           
   267                           	psect	cstackCOMRAM
   268   000028                     __pcstackCOMRAM:
   269                           	callstack 0
   270   000028                     gpio_pin_direction_init@_pin_config_t:
   271                           	callstack 0
   272   000028                     gpio_pin_write_logic@_pin_config_t:
   273                           	callstack 0
   274   000028                     gpio_pin_read_logic@_pin_config_t:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x0
   278   000028                     	ds	2
   279   00002A                     ??_gpio_pin_direction_init:
   280   00002A                     gpio_pin_write_logic@logic:
   281                           	callstack 0
   282   00002A                     gpio_pin_read_logic@logic:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x2
   286   00002A                     	ds	1
   287   00002B                     ??_gpio_pin_write_logic:
   288                           
   289                           ; 1 bytes @ 0x3
   290   00002B                     	ds	1
   291   00002C                     ??_gpio_pin_read_logic:
   292                           
   293                           ; 1 bytes @ 0x4
   294   00002C                     	ds	4
   295   000030                     gpio_pin_direction_init@ret:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x8
   299   000030                     	ds	1
   300   000031                     gpio_pin_write_logic@ret:
   301                           	callstack 0
   302   000031                     gpio_pin_read_logic@ret:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x9
   306   000031                     	ds	1
   307   000032                     keypad_initialize@_keypad:
   308                           	callstack 0
   309   000032                     keypad_get_value@_keypad:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0xA
   313   000032                     	ds	2
   314   000034                     ??_keypad_initialize:
   315   000034                     keypad_get_value@value:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0xC
   319   000034                     	ds	2
   320   000036                     ??_keypad_get_value:
   321                           
   322                           ; 1 bytes @ 0xE
   323   000036                     	ds	2
   324   000038                     keypad_initialize@cnt_row:
   325                           	callstack 0
   326   000038                     keypad_get_value@cnt_row1:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x10
   330   000038                     	ds	1
   331   000039                     keypad_initialize@cnt_column:
   332                           	callstack 0
   333   000039                     keypad_get_value@cnt_row2:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x11
   337   000039                     	ds	1
   338   00003A                     keypad_initialize@ret:
   339                           	callstack 0
   340   00003A                     keypad_get_value@cnt_column:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x12
   344   00003A                     	ds	1
   345   00003B                     keypad_initialize@i:
   346                           	callstack 0
   347   00003B                     keypad_get_value@ret:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x13
   351   00003B                     	ds	1
   352   00003C                     keypad_initialize@j:
   353                           	callstack 0
   354   00003C                     keypad_get_value@j:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0x14
   358   00003C                     	ds	1
   359   00003D                     keypad_get_value@logic_btn:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x15
   363   00003D                     	ds	1
   364   00003E                     keypad_get_value@i:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x16
   368   00003E                     	ds	1
   369   00003F                     keypad_get_value@k:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x17
   373   00003F                     	ds	1
   374   000040                     
   375                           ; 1 bytes @ 0x18
   376 ;;
   377 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   378 ;;
   379 ;; *************** function _main *****************
   380 ;; Defined at:
   381 ;;		line 48 in file "Application.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  2  264[None  ] int 
   388 ;; Registers used:
   389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels required when called: 3
   401 ;; This function calls:
   402 ;;		_Application_initialize
   403 ;;		_keypad_get_value
   404 ;; This function is called by:
   405 ;;		Startup code after reset
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text0
   410   0015F4                     __ptext0:
   411                           	callstack 0
   412   0015F4                     _main:
   413                           	callstack 28
   414   0015F4                     
   415                           ;Application.c: 49:     Application_initialize();
   416   0015F4  EC0B  F00B         	call	_Application_initialize	;wreg free
   417   0015F8                     l1907:
   418                           
   419                           ;Application.c: 51:        ret = keypad_get_value(&kaypad_1, &val);
   420   0015F8  0E20               	movlw	low _kaypad_1
   421   0015FA  6E32               	movwf	keypad_get_value@_keypad^0,c
   422   0015FC  0E00               	movlw	high _kaypad_1
   423   0015FE  6E33               	movwf	(keypad_get_value@_keypad+1)^0,c
   424   001600  0E4F               	movlw	low _val
   425   001602  6E34               	movwf	keypad_get_value@value^0,c
   426   001604  0E00               	movlw	high _val
   427   001606  6E35               	movwf	(keypad_get_value@value+1)^0,c
   428   001608  EC5F  F009         	call	_keypad_get_value	;wreg free
   429   00160C  6E1F               	movwf	_ret^0,c
   430   00160E  EFFC  F00A         	goto	l1907
   431   001612  EF00  F000         	goto	start
   432   001616                     __end_of_main:
   433                           	callstack 0
   434                           
   435 ;; *************** function _keypad_get_value *****************
   436 ;; Defined at:
   437 ;;		line 37 in file "ECU_Layer/ecu_keypad/ecu_keypad.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;  _keypad         2   10[COMRAM] PTR const struct .
   440 ;;		 -> kaypad_1(8), 
   441 ;;  value           2   12[COMRAM] PTR unsigned char 
   442 ;;		 -> val(1), 
   443 ;; Auto vars:     Size  Location     Type
   444 ;;  k               1   23[COMRAM] unsigned char 
   445 ;;  j               1   20[COMRAM] unsigned char 
   446 ;;  i               1   22[COMRAM] unsigned char 
   447 ;;  logic_btn       1   21[COMRAM] enum E2798
   448 ;;  ret             1   19[COMRAM] unsigned char 
   449 ;;  cnt_column      1   18[COMRAM] unsigned char 
   450 ;;  cnt_row2        1   17[COMRAM] unsigned char 
   451 ;;  cnt_row1        1   16[COMRAM] unsigned char 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      unsigned char 
   454 ;; Registers used:
   455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;Total ram usage:       14 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; Hardware stack levels required when called: 1
   468 ;; This function calls:
   469 ;;		_gpio_pin_read_logic
   470 ;;		_gpio_pin_write_logic
   471 ;; This function is called by:
   472 ;;		_main
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text1
   477   0012BE                     __ptext1:
   478                           	callstack 0
   479   0012BE                     _keypad_get_value:
   480                           	callstack 29
   481   0012BE                     
   482                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 38:     STD_ReturnType ret = (STD_ReturnType)0x01;
   483   0012BE  0E01               	movlw	1
   484   0012C0  6E3B               	movwf	keypad_get_value@ret^0,c
   485                           
   486                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 39:     uint8 cnt_row1 = 4;
   487   0012C2  0E04               	movlw	4
   488   0012C4  6E38               	movwf	keypad_get_value@cnt_row1^0,c
   489                           
   490                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 40:     uint8 cnt_row2 = 4;
   491   0012C6  0E04               	movlw	4
   492   0012C8  6E39               	movwf	keypad_get_value@cnt_row2^0,c
   493                           
   494                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 41:     uint8 cnt_column = 4;
   495   0012CA  0E04               	movlw	4
   496   0012CC  6E3A               	movwf	keypad_get_value@cnt_column^0,c
   497                           
   498                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 42:     logic_t logic_btn = GPIO_LOW;
   499   0012CE  0E00               	movlw	0
   500   0012D0  6E3D               	movwf	keypad_get_value@logic_btn^0,c
   501   0012D2                     
   502                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 43:     if(((void*)0) == _keypad){
   503   0012D2  5032               	movf	keypad_get_value@_keypad^0,w,c
   504   0012D4  1033               	iorwf	(keypad_get_value@_keypad+1)^0,w,c
   505   0012D6  A4D8               	btfss	status,2,c
   506   0012D8  EF70  F009         	goto	u951
   507   0012DC  EF72  F009         	goto	u950
   508   0012E0                     u951:
   509   0012E0  EF76  F009         	goto	l1603
   510   0012E4                     u950:
   511   0012E4                     
   512                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 44:         ret = (STD_ReturnType)0x00;
   513   0012E4  0E00               	movlw	0
   514   0012E6  6E3B               	movwf	keypad_get_value@ret^0,c
   515                           
   516                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 45:     }
   517   0012E8  EFE7  F009         	goto	l1631
   518   0012EC                     l1603:
   519                           
   520                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 47:         for(uint8 i = 0; i < cnt_row1; i++){
   521   0012EC  0E00               	movlw	0
   522   0012EE  6E3E               	movwf	keypad_get_value@i^0,c
   523   0012F0  EFDE  F009         	goto	l1629
   524   0012F4                     l1605:
   525                           
   526                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 48:             for(uint8 j = 0; j < cnt_row2; j++){
   527   0012F4  0E00               	movlw	0
   528   0012F6  6E3C               	movwf	keypad_get_value@j^0,c
   529   0012F8  EF89  F009         	goto	l1611
   530   0012FC                     l1607:
   531   0012FC  503C               	movf	keypad_get_value@j^0,w,c
   532   0012FE  2432               	addwf	keypad_get_value@_keypad^0,w,c
   533   001300  6E28               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   534   001302  0E00               	movlw	0
   535   001304  2033               	addwfc	(keypad_get_value@_keypad+1)^0,w,c
   536   001306  6E29               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
   537   001308  0E00               	movlw	0
   538   00130A  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
   539   00130C  ECBA  F008         	call	_gpio_pin_write_logic	;wreg free
   540   001310                     
   541                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 50:             }
   542   001310  2A3C               	incf	keypad_get_value@j^0,f,c
   543   001312                     l1611:
   544   001312  5039               	movf	keypad_get_value@cnt_row2^0,w,c
   545   001314  5C3C               	subwf	keypad_get_value@j^0,w,c
   546   001316  A0D8               	btfss	status,0,c
   547   001318  EF90  F009         	goto	u961
   548   00131C  EF92  F009         	goto	u960
   549   001320                     u961:
   550   001320  EF7E  F009         	goto	l1607
   551   001324                     u960:
   552   001324                     
   553                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 51:             ret = gpio_pin_write_logic(&(_keypad
      +                          ->keypad_row_pins[i]), GPIO_HIGH);
   554   001324  503E               	movf	keypad_get_value@i^0,w,c
   555   001326  2432               	addwf	keypad_get_value@_keypad^0,w,c
   556   001328  6E28               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   557   00132A  0E00               	movlw	0
   558   00132C  2033               	addwfc	(keypad_get_value@_keypad+1)^0,w,c
   559   00132E  6E29               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
   560   001330  0E01               	movlw	1
   561   001332  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
   562   001334  ECBA  F008         	call	_gpio_pin_write_logic	;wreg free
   563   001338  6E3B               	movwf	keypad_get_value@ret^0,c
   564   00133A                     
   565                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 52:             for(uint8 k = 0; k < cnt_column; k++
      +                          ){
   566   00133A  0E00               	movlw	0
   567   00133C  6E3F               	movwf	keypad_get_value@k^0,c
   568   00133E  EFD4  F009         	goto	l1625
   569   001342                     l1617:
   570                           
   571                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 53:                ret = gpio_pin_read_logic(&(_keyp
      +                          ad->keypad_colomns_pins[k]), &(logic_btn));
   572   001342  503F               	movf	keypad_get_value@k^0,w,c
   573   001344  2432               	addwf	keypad_get_value@_keypad^0,w,c
   574   001346  6E36               	movwf	??_keypad_get_value^0,c
   575   001348  0E00               	movlw	0
   576   00134A  2033               	addwfc	(keypad_get_value@_keypad+1)^0,w,c
   577   00134C  6E37               	movwf	(??_keypad_get_value+1)^0,c
   578   00134E  0E04               	movlw	4
   579   001350  2436               	addwf	??_keypad_get_value^0,w,c
   580   001352  6E28               	movwf	gpio_pin_read_logic@_pin_config_t^0,c
   581   001354  0E00               	movlw	0
   582   001356  2037               	addwfc	(??_keypad_get_value+1)^0,w,c
   583   001358  6E29               	movwf	(gpio_pin_read_logic@_pin_config_t+1)^0,c
   584   00135A  0E3D               	movlw	low keypad_get_value@logic_btn
   585   00135C  6E2A               	movwf	gpio_pin_read_logic@logic^0,c
   586   00135E  0E00               	movlw	high keypad_get_value@logic_btn
   587   001360  6E2B               	movwf	(gpio_pin_read_logic@logic+1)^0,c
   588   001362  EC60  F00A         	call	_gpio_pin_read_logic	;wreg free
   589   001366  6E3B               	movwf	keypad_get_value@ret^0,c
   590   001368                     
   591                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 54:                if(logic_btn == GPIO_HIGH){
   592   001368  043D               	decf	keypad_get_value@logic_btn^0,w,c
   593   00136A  A4D8               	btfss	status,2,c
   594   00136C  EFBA  F009         	goto	u971
   595   001370  EFBC  F009         	goto	u970
   596   001374                     u971:
   597   001374  EFD3  F009         	goto	l1623
   598   001378                     u970:
   599   001378                     
   600                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 55:                    *value = btn_values[i][k];
   601   001378  503E               	movf	keypad_get_value@i^0,w,c
   602   00137A  0D04               	mullw	4
   603   00137C  0E01               	movlw	low _btn_values
   604   00137E  24F3               	addwf	243,w,c
   605   001380  6E36               	movwf	??_keypad_get_value^0,c
   606   001382  0E10               	movlw	high _btn_values
   607   001384  20F4               	addwfc	prodh,w,c
   608   001386  6E37               	movwf	(??_keypad_get_value+1)^0,c
   609   001388  503F               	movf	keypad_get_value@k^0,w,c
   610   00138A  2636               	addwf	??_keypad_get_value^0,f,c
   611   00138C  0E00               	movlw	0
   612   00138E  2237               	addwfc	(??_keypad_get_value+1)^0,f,c
   613   001390  C036  FFF6         	movff	??_keypad_get_value,tblptrl
   614   001394  C037  FFF7         	movff	??_keypad_get_value+1,tblptrh
   615   001398                     	if	0	;tblptru may be non-zero
   616   001398                     	endif
   617   001398                     	if	0	;tblptru may be non-zero
   618   001398                     	endif
   619   001398  C034  FFD9         	movff	keypad_get_value@value,fsr2l
   620   00139C  C035  FFDA         	movff	keypad_get_value@value+1,fsr2h
   621   0013A0  0008               	tblrd		*
   622   0013A2  CFF5 FFDF          	movff	tablat,indf2
   623   0013A6                     l1623:
   624                           
   625                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 57:             }
   626   0013A6  2A3F               	incf	keypad_get_value@k^0,f,c
   627   0013A8                     l1625:
   628   0013A8  503A               	movf	keypad_get_value@cnt_column^0,w,c
   629   0013AA  5C3F               	subwf	keypad_get_value@k^0,w,c
   630   0013AC  A0D8               	btfss	status,0,c
   631   0013AE  EFDB  F009         	goto	u981
   632   0013B2  EFDD  F009         	goto	u980
   633   0013B6                     u981:
   634   0013B6  EFA1  F009         	goto	l1617
   635   0013BA                     u980:
   636   0013BA                     
   637                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 58:         }
   638   0013BA  2A3E               	incf	keypad_get_value@i^0,f,c
   639   0013BC                     l1629:
   640   0013BC  5038               	movf	keypad_get_value@cnt_row1^0,w,c
   641   0013BE  5C3E               	subwf	keypad_get_value@i^0,w,c
   642   0013C0  A0D8               	btfss	status,0,c
   643   0013C2  EFE5  F009         	goto	u991
   644   0013C6  EFE7  F009         	goto	u990
   645   0013CA                     u991:
   646   0013CA  EF7A  F009         	goto	l1605
   647   0013CE                     u990:
   648   0013CE                     l1631:
   649                           
   650                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 60:     return ret;
   651   0013CE  503B               	movf	keypad_get_value@ret^0,w,c
   652   0013D0  0012               	return		;funcret
   653   0013D2                     __end_of_keypad_get_value:
   654                           	callstack 0
   655                           
   656 ;; *************** function _gpio_pin_read_logic *****************
   657 ;; Defined at:
   658 ;;		line 96 in file "MCAL_Layer/hal_gpio.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
   661 ;;		 -> kaypad_1.keypad_colomns_pins(4), kaypad_1(8), 
   662 ;;  logic           2    2[COMRAM] PTR enum E2798
   663 ;;		 -> keypad_get_value@logic_btn(1), button_read_state@Pin_Logic_Status(1), 
   664 ;; Auto vars:     Size  Location     Type
   665 ;;  ret             1    9[COMRAM] unsigned char 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      unsigned char 
   668 ;; Registers used:
   669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;Total ram usage:       10 bytes
   680 ;; Hardware stack levels used: 1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_keypad_get_value
   685 ;;		_button_read_state
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text2
   690   0014C0                     __ptext2:
   691                           	callstack 0
   692   0014C0                     _gpio_pin_read_logic:
   693                           	callstack 29
   694   0014C0                     
   695                           ;MCAL_Layer/hal_gpio.c: 97:     STD_ReturnType ret = (STD_ReturnType)0x01;
   696   0014C0  0E01               	movlw	1
   697   0014C2  6E31               	movwf	gpio_pin_read_logic@ret^0,c
   698   0014C4                     
   699                           ;MCAL_Layer/hal_gpio.c: 98:     if(_pin_config_t == ((void*)0) || logic == ((void*)0) ||
      +                           (_pin_config_t->port > 5 - 1) || (_pin_config_t->pin > 8 - 1)) ret = (STD_ReturnType)0x
      +                          00;
   700   0014C4  5028               	movf	gpio_pin_read_logic@_pin_config_t^0,w,c
   701   0014C6  1029               	iorwf	(gpio_pin_read_logic@_pin_config_t+1)^0,w,c
   702   0014C8  B4D8               	btfsc	status,2,c
   703   0014CA  EF69  F00A         	goto	u871
   704   0014CE  EF6B  F00A         	goto	u870
   705   0014D2                     u871:
   706   0014D2  EF94  F00A         	goto	l1561
   707   0014D6                     u870:
   708   0014D6  502A               	movf	gpio_pin_read_logic@logic^0,w,c
   709   0014D8  102B               	iorwf	(gpio_pin_read_logic@logic+1)^0,w,c
   710   0014DA  B4D8               	btfsc	status,2,c
   711   0014DC  EF72  F00A         	goto	u881
   712   0014E0  EF74  F00A         	goto	u880
   713   0014E4                     u881:
   714   0014E4  EF94  F00A         	goto	l1561
   715   0014E8                     u880:
   716   0014E8  C028  FFD9         	movff	gpio_pin_read_logic@_pin_config_t,fsr2l
   717   0014EC  C029  FFDA         	movff	gpio_pin_read_logic@_pin_config_t+1,fsr2h
   718   0014F0  50DF               	movf	223,w,c
   719   0014F2  0B07               	andlw	7
   720   0014F4  6E2C               	movwf	??_gpio_pin_read_logic^0,c
   721   0014F6  0E05               	movlw	5
   722   0014F8  602C               	cpfslt	??_gpio_pin_read_logic^0,c
   723   0014FA  EF81  F00A         	goto	u891
   724   0014FE  EF83  F00A         	goto	u890
   725   001502                     u891:
   726   001502  EF94  F00A         	goto	l1561
   727   001506                     u890:
   728   001506  C028  FFD9         	movff	gpio_pin_read_logic@_pin_config_t,fsr2l
   729   00150A  C029  FFDA         	movff	gpio_pin_read_logic@_pin_config_t+1,fsr2h
   730   00150E  30DF               	rrcf	223,w,c
   731   001510  32E8               	rrcf	wreg,f,c
   732   001512  32E8               	rrcf	wreg,f,c
   733   001514  0B07               	andlw	7
   734   001516  6E2C               	movwf	??_gpio_pin_read_logic^0,c
   735   001518  0E07               	movlw	7
   736   00151A  642C               	cpfsgt	??_gpio_pin_read_logic^0,c
   737   00151C  EF92  F00A         	goto	u901
   738   001520  EF94  F00A         	goto	u900
   739   001524                     u901:
   740   001524  EF98  F00A         	goto	l1563
   741   001528                     u900:
   742   001528                     l1561:
   743   001528  0E00               	movlw	0
   744   00152A  6E31               	movwf	gpio_pin_read_logic@ret^0,c
   745   00152C  EFC9  F00A         	goto	l1565
   746   001530                     l1563:
   747                           
   748                           ;MCAL_Layer/hal_gpio.c: 100:         *logic = ((*port_register[_pin_config_t->port] >> _
      +                          pin_config_t->pin) & 1);
   749   001530  C028  FFD9         	movff	gpio_pin_read_logic@_pin_config_t,fsr2l
   750   001534  C029  FFDA         	movff	gpio_pin_read_logic@_pin_config_t+1,fsr2h
   751   001538  30DF               	rrcf	223,w,c
   752   00153A  32E8               	rrcf	wreg,f,c
   753   00153C  32E8               	rrcf	wreg,f,c
   754   00153E  0B07               	andlw	7
   755   001540  6E2C               	movwf	??_gpio_pin_read_logic^0,c
   756   001542  C028  FFD9         	movff	gpio_pin_read_logic@_pin_config_t,fsr2l
   757   001546  C029  FFDA         	movff	gpio_pin_read_logic@_pin_config_t+1,fsr2h
   758   00154A  50DF               	movf	223,w,c
   759   00154C  0B07               	andlw	7
   760   00154E  6E2D               	movwf	(??_gpio_pin_read_logic+1)^0,c
   761   001550  502D               	movf	(??_gpio_pin_read_logic+1)^0,w,c
   762   001552  0D02               	mullw	2
   763   001554  0E01               	movlw	low _port_register
   764   001556  24F3               	addwf	243,w,c
   765   001558  6ED9               	movwf	fsr2l,c
   766   00155A  0E00               	movlw	high _port_register
   767   00155C  20F4               	addwfc	prodh,w,c
   768   00155E  6EDA               	movwf	fsr2h,c
   769   001560  CFDE F02E          	movff	postinc2,??_gpio_pin_read_logic+2
   770   001564  CFDD F02F          	movff	postdec2,??_gpio_pin_read_logic+3
   771   001568  C02E  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
   772   00156C  C02F  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
   773   001570  50DF               	movf	indf2,w,c
   774   001572  6E30               	movwf	(??_gpio_pin_read_logic+4)^0,c
   775   001574  2A2C               	incf	??_gpio_pin_read_logic^0,f,c
   776   001576  EFBF  F00A         	goto	u914
   777   00157A                     u915:
   778   00157A  90D8               	bcf	status,0,c
   779   00157C  3230               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
   780   00157E                     u914:
   781   00157E  2E2C               	decfsz	??_gpio_pin_read_logic^0,f,c
   782   001580  EFBD  F00A         	goto	u915
   783   001584  5030               	movf	(??_gpio_pin_read_logic+4)^0,w,c
   784   001586  0B01               	andlw	1
   785   001588  C02A  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
   786   00158C  C02B  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
   787   001590  6EDF               	movwf	indf2,c
   788   001592                     l1565:
   789                           
   790                           ;MCAL_Layer/hal_gpio.c: 102:     return ret;
   791   001592  5031               	movf	gpio_pin_read_logic@ret^0,w,c
   792   001594  0012               	return		;funcret
   793   001596                     __end_of_gpio_pin_read_logic:
   794                           	callstack 0
   795                           
   796 ;; *************** function _Application_initialize *****************
   797 ;; Defined at:
   798 ;;		line 57 in file "Application.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;Total ram usage:        0 bytes
   817 ;; Hardware stack levels used: 1
   818 ;; Hardware stack levels required when called: 2
   819 ;; This function calls:
   820 ;;		_keypad_initialize
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text3
   827   001616                     __ptext3:
   828                           	callstack 0
   829   001616                     _Application_initialize:
   830                           	callstack 28
   831   001616                     
   832                           ;Application.c: 58:     ret = keypad_initialize(&kaypad_1);
   833   001616  0E20               	movlw	low _kaypad_1
   834   001618  6E32               	movwf	keypad_initialize@_keypad^0,c
   835   00161A  0E00               	movlw	high _kaypad_1
   836   00161C  6E33               	movwf	(keypad_initialize@_keypad+1)^0,c
   837   00161E  ECE9  F009         	call	_keypad_initialize	;wreg free
   838   001622  6E1F               	movwf	_ret^0,c
   839   001624  0012               	return		;funcret
   840   001626                     __end_of_Application_initialize:
   841                           	callstack 0
   842                           
   843 ;; *************** function _keypad_initialize *****************
   844 ;; Defined at:
   845 ;;		line 18 in file "ECU_Layer/ecu_keypad/ecu_keypad.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  _keypad         2   10[COMRAM] PTR const struct .
   848 ;;		 -> kaypad_1(8), 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  j               1   20[COMRAM] unsigned char 
   851 ;;  i               1   19[COMRAM] unsigned char 
   852 ;;  ret             1   18[COMRAM] unsigned char 
   853 ;;  cnt_column      1   17[COMRAM] unsigned char 
   854 ;;  cnt_row         1   16[COMRAM] unsigned char 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      unsigned char 
   857 ;; Registers used:
   858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;Total ram usage:       11 bytes
   869 ;; Hardware stack levels used: 1
   870 ;; Hardware stack levels required when called: 1
   871 ;; This function calls:
   872 ;;		_gpio_pin_direction_init
   873 ;;		_gpio_pin_write_logic
   874 ;; This function is called by:
   875 ;;		_Application_initialize
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text4
   880   0013D2                     __ptext4:
   881                           	callstack 0
   882   0013D2                     _keypad_initialize:
   883                           	callstack 28
   884   0013D2                     
   885                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 19:     STD_ReturnType ret = (STD_ReturnType)0x01;
   886   0013D2  0E01               	movlw	1
   887   0013D4  6E3A               	movwf	keypad_initialize@ret^0,c
   888                           
   889                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 20:     uint8 cnt_row = 4;
   890   0013D6  0E04               	movlw	4
   891   0013D8  6E38               	movwf	keypad_initialize@cnt_row^0,c
   892                           
   893                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 21:     uint8 cnt_column = 4;
   894   0013DA  0E04               	movlw	4
   895   0013DC  6E39               	movwf	keypad_initialize@cnt_column^0,c
   896   0013DE                     
   897                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 22:     if(((void*)0) == _keypad){
   898   0013DE  5032               	movf	keypad_initialize@_keypad^0,w,c
   899   0013E0  1033               	iorwf	(keypad_initialize@_keypad+1)^0,w,c
   900   0013E2  A4D8               	btfss	status,2,c
   901   0013E4  EFF6  F009         	goto	u921
   902   0013E8  EFF8  F009         	goto	u920
   903   0013EC                     u921:
   904   0013EC  EFFC  F009         	goto	l1575
   905   0013F0                     u920:
   906   0013F0                     
   907                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 23:         ret = (STD_ReturnType)0x00;
   908   0013F0  0E00               	movlw	0
   909   0013F2  6E3A               	movwf	keypad_initialize@ret^0,c
   910                           
   911                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 24:     }
   912   0013F4  EF5E  F00A         	goto	l1591
   913   0013F8                     l1575:
   914                           
   915                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 26:         for(uint8 i = 0; i < cnt_row; i++){
   916   0013F8  0E00               	movlw	0
   917   0013FA  6E3B               	movwf	keypad_initialize@i^0,c
   918   0013FC  EF1B  F00A         	goto	l1581
   919   001400                     l1577:
   920                           
   921                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 27:             gpio_pin_direction_init(&(_keypad->k
      +                          eypad_row_pins[i]));
   922   001400  503B               	movf	keypad_initialize@i^0,w,c
   923   001402  2432               	addwf	keypad_initialize@_keypad^0,w,c
   924   001404  6E28               	movwf	gpio_pin_direction_init@_pin_config_t^0,c
   925   001406  0E00               	movlw	0
   926   001408  2033               	addwfc	(keypad_initialize@_keypad+1)^0,w,c
   927   00140A  6E29               	movwf	(gpio_pin_direction_init@_pin_config_t+1)^0,c
   928   00140C  EC09  F008         	call	_gpio_pin_direction_init	;wreg free
   929                           
   930                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 28:             gpio_pin_write_logic(&(_keypad->keyp
      +                          ad_row_pins[i]), (_keypad->keypad_row_pins[i].logic));
   931   001410  503B               	movf	keypad_initialize@i^0,w,c
   932   001412  2432               	addwf	keypad_initialize@_keypad^0,w,c
   933   001414  6E28               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   934   001416  0E00               	movlw	0
   935   001418  2033               	addwfc	(keypad_initialize@_keypad+1)^0,w,c
   936   00141A  6E29               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
   937   00141C  503B               	movf	keypad_initialize@i^0,w,c
   938   00141E  2432               	addwf	keypad_initialize@_keypad^0,w,c
   939   001420  6ED9               	movwf	fsr2l,c
   940   001422  0E00               	movlw	0
   941   001424  2033               	addwfc	(keypad_initialize@_keypad+1)^0,w,c
   942   001426  6EDA               	movwf	fsr2h,c
   943   001428  0E00               	movlw	0
   944   00142A  BEDF               	btfsc	indf2,7,c
   945   00142C  0E01               	movlw	1
   946   00142E  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
   947   001430  ECBA  F008         	call	_gpio_pin_write_logic	;wreg free
   948   001434                     
   949                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 29:         }
   950   001434  2A3B               	incf	keypad_initialize@i^0,f,c
   951   001436                     l1581:
   952   001436  5038               	movf	keypad_initialize@cnt_row^0,w,c
   953   001438  5C3B               	subwf	keypad_initialize@i^0,w,c
   954   00143A  A0D8               	btfss	status,0,c
   955   00143C  EF22  F00A         	goto	u931
   956   001440  EF24  F00A         	goto	u930
   957   001444                     u931:
   958   001444  EF00  F00A         	goto	l1577
   959   001448                     u930:
   960   001448                     
   961                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 30:         for(uint8 j = 0; j < cnt_column; j++){
   962   001448  0E00               	movlw	0
   963   00144A  6E3C               	movwf	keypad_initialize@j^0,c
   964   00144C  EF55  F00A         	goto	l1589
   965   001450                     l1585:
   966                           
   967                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 31:         gpio_pin_direction_init(&(_keypad->keypa
      +                          d_colomns_pins[j]));
   968   001450  503C               	movf	keypad_initialize@j^0,w,c
   969   001452  2432               	addwf	keypad_initialize@_keypad^0,w,c
   970   001454  6E34               	movwf	??_keypad_initialize^0,c
   971   001456  0E00               	movlw	0
   972   001458  2033               	addwfc	(keypad_initialize@_keypad+1)^0,w,c
   973   00145A  6E35               	movwf	(??_keypad_initialize+1)^0,c
   974   00145C  0E04               	movlw	4
   975   00145E  2434               	addwf	??_keypad_initialize^0,w,c
   976   001460  6E28               	movwf	gpio_pin_direction_init@_pin_config_t^0,c
   977   001462  0E00               	movlw	0
   978   001464  2035               	addwfc	(??_keypad_initialize+1)^0,w,c
   979   001466  6E29               	movwf	(gpio_pin_direction_init@_pin_config_t+1)^0,c
   980   001468  EC09  F008         	call	_gpio_pin_direction_init	;wreg free
   981                           
   982                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 32:         gpio_pin_write_logic(&(_keypad->keypad_c
      +                          olomns_pins[j]), (_keypad->keypad_colomns_pins[j].logic));
   983   00146C  503C               	movf	keypad_initialize@j^0,w,c
   984   00146E  2432               	addwf	keypad_initialize@_keypad^0,w,c
   985   001470  6E34               	movwf	??_keypad_initialize^0,c
   986   001472  0E00               	movlw	0
   987   001474  2033               	addwfc	(keypad_initialize@_keypad+1)^0,w,c
   988   001476  6E35               	movwf	(??_keypad_initialize+1)^0,c
   989   001478  0E04               	movlw	4
   990   00147A  2434               	addwf	??_keypad_initialize^0,w,c
   991   00147C  6E28               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   992   00147E  0E00               	movlw	0
   993   001480  2035               	addwfc	(??_keypad_initialize+1)^0,w,c
   994   001482  6E29               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
   995   001484  503C               	movf	keypad_initialize@j^0,w,c
   996   001486  2432               	addwf	keypad_initialize@_keypad^0,w,c
   997   001488  6E36               	movwf	(??_keypad_initialize+2)^0,c
   998   00148A  0E00               	movlw	0
   999   00148C  2033               	addwfc	(keypad_initialize@_keypad+1)^0,w,c
  1000   00148E  6E37               	movwf	(??_keypad_initialize+3)^0,c
  1001   001490  0E04               	movlw	4
  1002   001492  2436               	addwf	(??_keypad_initialize+2)^0,w,c
  1003   001494  6ED9               	movwf	fsr2l,c
  1004   001496  0E00               	movlw	0
  1005   001498  2037               	addwfc	(??_keypad_initialize+3)^0,w,c
  1006   00149A  6EDA               	movwf	fsr2h,c
  1007   00149C  0E00               	movlw	0
  1008   00149E  BEDF               	btfsc	indf2,7,c
  1009   0014A0  0E01               	movlw	1
  1010   0014A2  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  1011   0014A4  ECBA  F008         	call	_gpio_pin_write_logic	;wreg free
  1012   0014A8                     
  1013                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 33:         }
  1014   0014A8  2A3C               	incf	keypad_initialize@j^0,f,c
  1015   0014AA                     l1589:
  1016   0014AA  5039               	movf	keypad_initialize@cnt_column^0,w,c
  1017   0014AC  5C3C               	subwf	keypad_initialize@j^0,w,c
  1018   0014AE  A0D8               	btfss	status,0,c
  1019   0014B0  EF5C  F00A         	goto	u941
  1020   0014B4  EF5E  F00A         	goto	u940
  1021   0014B8                     u941:
  1022   0014B8  EF28  F00A         	goto	l1585
  1023   0014BC                     u940:
  1024   0014BC                     l1591:
  1025                           
  1026                           ;ECU_Layer/ecu_keypad/ecu_keypad.c: 35:     return ret;
  1027   0014BC  503A               	movf	keypad_initialize@ret^0,w,c
  1028   0014BE  0012               	return		;funcret
  1029   0014C0                     __end_of_keypad_initialize:
  1030                           	callstack 0
  1031                           
  1032 ;; *************** function _gpio_pin_write_logic *****************
  1033 ;; Defined at:
  1034 ;;		line 70 in file "MCAL_Layer/hal_gpio.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
  1037 ;;		 -> kaypad_1.keypad_colomns_pins(4), kaypad_1.keypad_row_pins(4), kaypad_1(8), relay_turn_off@relayy(1), 
  1038 ;;		 -> relay_turn_on@relayy(1), relay_initialize@relayy(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), 
  1039 ;;		 -> led_initialize@pin_obj(1), Dc_motor_stop@dc_motor_pin_2(1), Dc_motor_stop@dc_motor_pin_1(1), Dc_motor_turn_right
      +@dc_motor_pin_2(1), 
  1040 ;;		 -> Dc_motor_turn_right@dc_motor_pin_1(1), Dc_motor_turn_left@dc_motor_pin_2(1), Dc_motor_turn_left@dc_motor_pin_1(1
      +), Dc_motor_initialize@dc_motor_pin_2(1), 
  1041 ;;		 -> Dc_motor_initialize@dc_motor_pin_1(1), 
  1042 ;;  logic           1    2[COMRAM] enum E2798
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  ret             1    9[COMRAM] unsigned char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      unsigned char 
  1047 ;; Registers used:
  1048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1054 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;Total ram usage:       10 bytes
  1059 ;; Hardware stack levels used: 1
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_keypad_initialize
  1064 ;;		_keypad_get_value
  1065 ;;		_segment_initialize
  1066 ;;		_segment_write_num
  1067 ;;		_Dc_motor_initialize
  1068 ;;		_Dc_motor_turn_left
  1069 ;;		_Dc_motor_turn_right
  1070 ;;		_Dc_motor_stop
  1071 ;;		_led_initialize
  1072 ;;		_led_turn_on
  1073 ;;		_led_turn_off
  1074 ;;		_relay_initialize
  1075 ;;		_relay_turn_on
  1076 ;;		_relay_turn_off
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text5
  1081   001174                     __ptext5:
  1082                           	callstack 0
  1083   001174                     _gpio_pin_write_logic:
  1084                           	callstack 29
  1085   001174                     
  1086                           ;MCAL_Layer/hal_gpio.c: 71:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1087   001174  0E01               	movlw	1
  1088   001176  6E31               	movwf	gpio_pin_write_logic@ret^0,c
  1089   001178                     
  1090                           ;MCAL_Layer/hal_gpio.c: 72:     if(_pin_config_t == ((void*)0) || (_pin_config_t->port >
      +                           5 - 1) || (_pin_config_t->pin > 8 - 1)) ret = (STD_ReturnType)0x00;
  1091   001178  5028               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  1092   00117A  1029               	iorwf	(gpio_pin_write_logic@_pin_config_t+1)^0,w,c
  1093   00117C  B4D8               	btfsc	status,2,c
  1094   00117E  EFC3  F008         	goto	u821
  1095   001182  EFC5  F008         	goto	u820
  1096   001186                     u821:
  1097   001186  EFE5  F008         	goto	l1533
  1098   00118A                     u820:
  1099   00118A  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1100   00118E  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1101   001192  50DF               	movf	223,w,c
  1102   001194  0B07               	andlw	7
  1103   001196  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1104   001198  0E05               	movlw	5
  1105   00119A  602B               	cpfslt	??_gpio_pin_write_logic^0,c
  1106   00119C  EFD2  F008         	goto	u831
  1107   0011A0  EFD4  F008         	goto	u830
  1108   0011A4                     u831:
  1109   0011A4  EFE5  F008         	goto	l1533
  1110   0011A8                     u830:
  1111   0011A8  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1112   0011AC  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1113   0011B0  30DF               	rrcf	223,w,c
  1114   0011B2  32E8               	rrcf	wreg,f,c
  1115   0011B4  32E8               	rrcf	wreg,f,c
  1116   0011B6  0B07               	andlw	7
  1117   0011B8  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1118   0011BA  0E07               	movlw	7
  1119   0011BC  642B               	cpfsgt	??_gpio_pin_write_logic^0,c
  1120   0011BE  EFE3  F008         	goto	u841
  1121   0011C2  EFE5  F008         	goto	u840
  1122   0011C6                     u841:
  1123   0011C6  EF48  F009         	goto	l1541
  1124   0011CA                     u840:
  1125   0011CA                     l1533:
  1126   0011CA  0E00               	movlw	0
  1127   0011CC  6E31               	movwf	gpio_pin_write_logic@ret^0,c
  1128   0011CE  EF5D  F009         	goto	l1543
  1129   0011D2                     l1535:
  1130                           
  1131                           ;MCAL_Layer/hal_gpio.c: 76:                 (*lat_register[_pin_config_t->port] &= ~(1 <
      +                          < _pin_config_t->pin));
  1132   0011D2  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1133   0011D6  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1134   0011DA  30DF               	rrcf	223,w,c
  1135   0011DC  32E8               	rrcf	wreg,f,c
  1136   0011DE  32E8               	rrcf	wreg,f,c
  1137   0011E0  0B07               	andlw	7
  1138   0011E2  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1139   0011E4  0E01               	movlw	1
  1140   0011E6  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1141   0011E8  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  1142   0011EA  EFF9  F008         	goto	u854
  1143   0011EE                     u855:
  1144   0011EE  90D8               	bcf	status,0,c
  1145   0011F0  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1146   0011F2                     u854:
  1147   0011F2  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  1148   0011F4  EFF7  F008         	goto	u855
  1149   0011F8  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1150   0011FA  0AFF               	xorlw	255
  1151   0011FC  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1152   0011FE  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1153   001202  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1154   001206  50DF               	movf	223,w,c
  1155   001208  0B07               	andlw	7
  1156   00120A  6E2E               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1157   00120C  502E               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1158   00120E  0D02               	mullw	2
  1159   001210  0E0B               	movlw	low _lat_register
  1160   001212  24F3               	addwf	243,w,c
  1161   001214  6ED9               	movwf	fsr2l,c
  1162   001216  0E00               	movlw	high _lat_register
  1163   001218  20F4               	addwfc	prodh,w,c
  1164   00121A  6EDA               	movwf	fsr2h,c
  1165   00121C  CFDE F02F          	movff	postinc2,??_gpio_pin_write_logic+4
  1166   001220  CFDD F030          	movff	postdec2,??_gpio_pin_write_logic+5
  1167   001224  C02F  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1168   001228  C030  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1169   00122C  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1170   00122E  16DF               	andwf	indf2,f,c
  1171                           
  1172                           ;MCAL_Layer/hal_gpio.c: 77:                 break;
  1173   001230  EF5D  F009         	goto	l1543
  1174   001234                     l1537:
  1175                           
  1176                           ;MCAL_Layer/hal_gpio.c: 79:                 (*lat_register[_pin_config_t->port] |= (1 <<
      +                           _pin_config_t->pin));
  1177   001234  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1178   001238  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1179   00123C  30DF               	rrcf	223,w,c
  1180   00123E  32E8               	rrcf	wreg,f,c
  1181   001240  32E8               	rrcf	wreg,f,c
  1182   001242  0B07               	andlw	7
  1183   001244  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1184   001246  0E01               	movlw	1
  1185   001248  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1186   00124A  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  1187   00124C  EF2A  F009         	goto	u864
  1188   001250                     u865:
  1189   001250  90D8               	bcf	status,0,c
  1190   001252  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1191   001254                     u864:
  1192   001254  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  1193   001256  EF28  F009         	goto	u865
  1194   00125A  C028  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
  1195   00125E  C029  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
  1196   001262  50DF               	movf	223,w,c
  1197   001264  0B07               	andlw	7
  1198   001266  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1199   001268  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1200   00126A  0D02               	mullw	2
  1201   00126C  0E0B               	movlw	low _lat_register
  1202   00126E  24F3               	addwf	243,w,c
  1203   001270  6ED9               	movwf	fsr2l,c
  1204   001272  0E00               	movlw	high _lat_register
  1205   001274  20F4               	addwfc	prodh,w,c
  1206   001276  6EDA               	movwf	fsr2h,c
  1207   001278  CFDE F02E          	movff	postinc2,??_gpio_pin_write_logic+3
  1208   00127C  CFDD F02F          	movff	postdec2,??_gpio_pin_write_logic+4
  1209   001280  C02E  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1210   001284  C02F  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1211   001288  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1212   00128A  12DF               	iorwf	indf2,f,c
  1213                           
  1214                           ;MCAL_Layer/hal_gpio.c: 80:                 break;
  1215   00128C  EF5D  F009         	goto	l1543
  1216   001290                     l1541:
  1217   001290  502A               	movf	gpio_pin_write_logic@logic^0,w,c
  1218   001292  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1219   001294  6A2C               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1220                           
  1221                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1222                           ; Switch size 1, requested type "simple"
  1223                           ; Number of cases is 1, Range of values is 0 to 0
  1224                           ; switch strategies available:
  1225                           ; Name         Instructions Cycles
  1226                           ; simple_byte            4     3 (average)
  1227                           ;	Chosen strategy is simple_byte
  1228   001296  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1229   001298  0A00               	xorlw	0	; case 0
  1230   00129A  B4D8               	btfsc	status,2,c
  1231   00129C  EF52  F009         	goto	l1917
  1232   0012A0  EFE5  F008         	goto	l1533
  1233   0012A4                     l1917:
  1234                           
  1235                           ; Switch size 1, requested type "simple"
  1236                           ; Number of cases is 2, Range of values is 0 to 1
  1237                           ; switch strategies available:
  1238                           ; Name         Instructions Cycles
  1239                           ; simple_byte            7     4 (average)
  1240                           ;	Chosen strategy is simple_byte
  1241   0012A4  502B               	movf	??_gpio_pin_write_logic^0,w,c
  1242   0012A6  0A00               	xorlw	0	; case 0
  1243   0012A8  B4D8               	btfsc	status,2,c
  1244   0012AA  EFE9  F008         	goto	l1535
  1245   0012AE  0A01               	xorlw	1	; case 1
  1246   0012B0  B4D8               	btfsc	status,2,c
  1247   0012B2  EF1A  F009         	goto	l1537
  1248   0012B6  EFE5  F008         	goto	l1533
  1249   0012BA                     l1543:
  1250                           
  1251                           ;MCAL_Layer/hal_gpio.c: 84:     return ret;
  1252   0012BA  5031               	movf	gpio_pin_write_logic@ret^0,w,c
  1253   0012BC  0012               	return		;funcret
  1254   0012BE                     __end_of_gpio_pin_write_logic:
  1255                           	callstack 0
  1256                           
  1257 ;; *************** function _gpio_pin_direction_init *****************
  1258 ;; Defined at:
  1259 ;;		line 24 in file "MCAL_Layer/hal_gpio.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
  1262 ;;		 -> kaypad_1.keypad_colomns_pins(4), kaypad_1.keypad_row_pins(4), kaypad_1(8), relay_initialize@relayy(1), 
  1263 ;;		 -> led_initialize@pin_obj(1), Dc_motor_initialize@dc_motor_pin_2(1), Dc_motor_initialize@dc_motor_pin_1(1), 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  ret             1    8[COMRAM] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      unsigned char 
  1268 ;; Registers used:
  1269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;Total ram usage:        9 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_keypad_initialize
  1285 ;;		_button_initialize
  1286 ;;		_segment_initialize
  1287 ;;		_Dc_motor_initialize
  1288 ;;		_led_initialize
  1289 ;;		_relay_initialize
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text6
  1294   001012                     __ptext6:
  1295                           	callstack 0
  1296   001012                     _gpio_pin_direction_init:
  1297                           	callstack 28
  1298   001012                     
  1299                           ;MCAL_Layer/hal_gpio.c: 25:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1300   001012  0E01               	movlw	1
  1301   001014  6E30               	movwf	gpio_pin_direction_init@ret^0,c
  1302   001016                     
  1303                           ;MCAL_Layer/hal_gpio.c: 26:     if(_pin_config_t == ((void*)0) || (_pin_config_t->port >
      +                           (5 - 1)) || (_pin_config_t->pin > (8 - 1))) ret = (STD_ReturnType)0x00;
  1304   001016  5028               	movf	gpio_pin_direction_init@_pin_config_t^0,w,c
  1305   001018  1029               	iorwf	(gpio_pin_direction_init@_pin_config_t+1)^0,w,c
  1306   00101A  B4D8               	btfsc	status,2,c
  1307   00101C  EF12  F008         	goto	u751
  1308   001020  EF14  F008         	goto	u750
  1309   001024                     u751:
  1310   001024  EF34  F008         	goto	l1507
  1311   001028                     u750:
  1312   001028  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1313   00102C  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1314   001030  50DF               	movf	223,w,c
  1315   001032  0B07               	andlw	7
  1316   001034  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1317   001036  0E05               	movlw	5
  1318   001038  602A               	cpfslt	??_gpio_pin_direction_init^0,c
  1319   00103A  EF21  F008         	goto	u761
  1320   00103E  EF23  F008         	goto	u760
  1321   001042                     u761:
  1322   001042  EF34  F008         	goto	l1507
  1323   001046                     u760:
  1324   001046  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1325   00104A  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1326   00104E  30DF               	rrcf	223,w,c
  1327   001050  32E8               	rrcf	wreg,f,c
  1328   001052  32E8               	rrcf	wreg,f,c
  1329   001054  0B07               	andlw	7
  1330   001056  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1331   001058  0E07               	movlw	7
  1332   00105A  642A               	cpfsgt	??_gpio_pin_direction_init^0,c
  1333   00105C  EF32  F008         	goto	u771
  1334   001060  EF34  F008         	goto	u770
  1335   001064                     u771:
  1336   001064  EF97  F008         	goto	l1515
  1337   001068                     u770:
  1338   001068                     l1507:
  1339   001068  0E00               	movlw	0
  1340   00106A  6E30               	movwf	gpio_pin_direction_init@ret^0,c
  1341   00106C  EFB8  F008         	goto	l1517
  1342   001070                     l1509:
  1343                           
  1344                           ;MCAL_Layer/hal_gpio.c: 30:                 (*tris_register[_pin_config_t->port] &= ~(1 
      +                          << _pin_config_t->pin));
  1345   001070  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1346   001074  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1347   001078  30DF               	rrcf	223,w,c
  1348   00107A  32E8               	rrcf	wreg,f,c
  1349   00107C  32E8               	rrcf	wreg,f,c
  1350   00107E  0B07               	andlw	7
  1351   001080  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1352   001082  0E01               	movlw	1
  1353   001084  6E2B               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1354   001086  2A2A               	incf	??_gpio_pin_direction_init^0,f,c
  1355   001088  EF48  F008         	goto	u784
  1356   00108C                     u785:
  1357   00108C  90D8               	bcf	status,0,c
  1358   00108E  362B               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1359   001090                     u784:
  1360   001090  2E2A               	decfsz	??_gpio_pin_direction_init^0,f,c
  1361   001092  EF46  F008         	goto	u785
  1362   001096  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1363   001098  0AFF               	xorlw	255
  1364   00109A  6E2C               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1365   00109C  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1366   0010A0  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1367   0010A4  50DF               	movf	223,w,c
  1368   0010A6  0B07               	andlw	7
  1369   0010A8  6E2D               	movwf	(??_gpio_pin_direction_init+3)^0,c
  1370   0010AA  502D               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  1371   0010AC  0D02               	mullw	2
  1372   0010AE  0E15               	movlw	low _tris_register
  1373   0010B0  24F3               	addwf	243,w,c
  1374   0010B2  6ED9               	movwf	fsr2l,c
  1375   0010B4  0E00               	movlw	high _tris_register
  1376   0010B6  20F4               	addwfc	prodh,w,c
  1377   0010B8  6EDA               	movwf	fsr2h,c
  1378   0010BA  CFDE F02E          	movff	postinc2,??_gpio_pin_direction_init+4
  1379   0010BE  CFDD F02F          	movff	postdec2,??_gpio_pin_direction_init+5
  1380   0010C2  C02E  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  1381   0010C6  C02F  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  1382   0010CA  502C               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1383   0010CC  16DF               	andwf	indf2,f,c
  1384                           
  1385                           ;MCAL_Layer/hal_gpio.c: 31:                 break;
  1386   0010CE  EFB8  F008         	goto	l1517
  1387   0010D2                     l1511:
  1388                           
  1389                           ;MCAL_Layer/hal_gpio.c: 33:                 (*tris_register[_pin_config_t->port] |= (1 <
      +                          < _pin_config_t->pin));
  1390   0010D2  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1391   0010D6  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1392   0010DA  30DF               	rrcf	223,w,c
  1393   0010DC  32E8               	rrcf	wreg,f,c
  1394   0010DE  32E8               	rrcf	wreg,f,c
  1395   0010E0  0B07               	andlw	7
  1396   0010E2  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1397   0010E4  0E01               	movlw	1
  1398   0010E6  6E2B               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1399   0010E8  2A2A               	incf	??_gpio_pin_direction_init^0,f,c
  1400   0010EA  EF79  F008         	goto	u794
  1401   0010EE                     u795:
  1402   0010EE  90D8               	bcf	status,0,c
  1403   0010F0  362B               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1404   0010F2                     u794:
  1405   0010F2  2E2A               	decfsz	??_gpio_pin_direction_init^0,f,c
  1406   0010F4  EF77  F008         	goto	u795
  1407   0010F8  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1408   0010FC  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1409   001100  50DF               	movf	223,w,c
  1410   001102  0B07               	andlw	7
  1411   001104  6E2C               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1412   001106  502C               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1413   001108  0D02               	mullw	2
  1414   00110A  0E15               	movlw	low _tris_register
  1415   00110C  24F3               	addwf	243,w,c
  1416   00110E  6ED9               	movwf	fsr2l,c
  1417   001110  0E00               	movlw	high _tris_register
  1418   001112  20F4               	addwfc	prodh,w,c
  1419   001114  6EDA               	movwf	fsr2h,c
  1420   001116  CFDE F02D          	movff	postinc2,??_gpio_pin_direction_init+3
  1421   00111A  CFDD F02E          	movff	postdec2,??_gpio_pin_direction_init+4
  1422   00111E  C02D  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1423   001122  C02E  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1424   001126  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1425   001128  12DF               	iorwf	indf2,f,c
  1426                           
  1427                           ;MCAL_Layer/hal_gpio.c: 34:                 break;
  1428   00112A  EFB8  F008         	goto	l1517
  1429   00112E                     l1515:
  1430   00112E  C028  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1431   001132  C029  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1432   001136  BCDF               	btfsc	indf2,6,c
  1433   001138  EFA0  F008         	goto	u801
  1434   00113C  EFA3  F008         	goto	u800
  1435   001140                     u801:
  1436   001140  0E01               	movlw	1
  1437   001142  EFA4  F008         	goto	u810
  1438   001146                     u800:
  1439   001146  0E00               	movlw	0
  1440   001148                     u810:
  1441   001148  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1442   00114A  6A2B               	clrf	(??_gpio_pin_direction_init+1)^0,c
  1443                           
  1444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1445                           ; Switch size 1, requested type "simple"
  1446                           ; Number of cases is 1, Range of values is 0 to 0
  1447                           ; switch strategies available:
  1448                           ; Name         Instructions Cycles
  1449                           ; simple_byte            4     3 (average)
  1450                           ;	Chosen strategy is simple_byte
  1451   00114C  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1452   00114E  0A00               	xorlw	0	; case 0
  1453   001150  B4D8               	btfsc	status,2,c
  1454   001152  EFAD  F008         	goto	l1919
  1455   001156  EF34  F008         	goto	l1507
  1456   00115A                     l1919:
  1457                           
  1458                           ; Switch size 1, requested type "simple"
  1459                           ; Number of cases is 2, Range of values is 0 to 1
  1460                           ; switch strategies available:
  1461                           ; Name         Instructions Cycles
  1462                           ; simple_byte            7     4 (average)
  1463                           ;	Chosen strategy is simple_byte
  1464   00115A  502A               	movf	??_gpio_pin_direction_init^0,w,c
  1465   00115C  0A00               	xorlw	0	; case 0
  1466   00115E  B4D8               	btfsc	status,2,c
  1467   001160  EF38  F008         	goto	l1509
  1468   001164  0A01               	xorlw	1	; case 1
  1469   001166  B4D8               	btfsc	status,2,c
  1470   001168  EF69  F008         	goto	l1511
  1471   00116C  EF34  F008         	goto	l1507
  1472   001170                     l1517:
  1473                           
  1474                           ;MCAL_Layer/hal_gpio.c: 38:     return ret;
  1475   001170  5030               	movf	gpio_pin_direction_init@ret^0,w,c
  1476   001172  0012               	return		;funcret
  1477   001174                     __end_of_gpio_pin_direction_init:
  1478                           	callstack 0
  1479                           
  1480                           	psect	rparam
  1481   000000                     
  1482                           	psect	idloc
  1483                           
  1484                           ;Config register IDLOC0 @ 0x200000
  1485                           ;	unspecified, using default values
  1486   200000                     	org	2097152
  1487   200000  FF                 	db	255
  1488                           
  1489                           ;Config register IDLOC1 @ 0x200001
  1490                           ;	unspecified, using default values
  1491   200001                     	org	2097153
  1492   200001  FF                 	db	255
  1493                           
  1494                           ;Config register IDLOC2 @ 0x200002
  1495                           ;	unspecified, using default values
  1496   200002                     	org	2097154
  1497   200002  FF                 	db	255
  1498                           
  1499                           ;Config register IDLOC3 @ 0x200003
  1500                           ;	unspecified, using default values
  1501   200003                     	org	2097155
  1502   200003  FF                 	db	255
  1503                           
  1504                           ;Config register IDLOC4 @ 0x200004
  1505                           ;	unspecified, using default values
  1506   200004                     	org	2097156
  1507   200004  FF                 	db	255
  1508                           
  1509                           ;Config register IDLOC5 @ 0x200005
  1510                           ;	unspecified, using default values
  1511   200005                     	org	2097157
  1512   200005  FF                 	db	255
  1513                           
  1514                           ;Config register IDLOC6 @ 0x200006
  1515                           ;	unspecified, using default values
  1516   200006                     	org	2097158
  1517   200006  FF                 	db	255
  1518                           
  1519                           ;Config register IDLOC7 @ 0x200007
  1520                           ;	unspecified, using default values
  1521   200007                     	org	2097159
  1522   200007  FF                 	db	255
  1523                           
  1524                           	psect	config
  1525                           
  1526                           ; Padding undefined space
  1527   300000                     	org	3145728
  1528   300000  FF                 	db	255
  1529                           
  1530                           ;Config register CONFIG1H @ 0x300001
  1531                           ;	Oscillator Selection bits
  1532                           ;	OSC = HS, HS oscillator
  1533                           ;	Fail-Safe Clock Monitor Enable bit
  1534                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1535                           ;	Internal/External Oscillator Switchover bit
  1536                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1537   300001                     	org	3145729
  1538   300001  02                 	db	2
  1539                           
  1540                           ;Config register CONFIG2L @ 0x300002
  1541                           ;	Power-up Timer Enable bit
  1542                           ;	PWRT = OFF, PWRT disabled
  1543                           ;	Brown-out Reset Enable bits
  1544                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1545                           ;	Brown Out Reset Voltage bits
  1546                           ;	BORV = 1, 
  1547   300002                     	org	3145730
  1548   300002  09                 	db	9
  1549                           
  1550                           ;Config register CONFIG2H @ 0x300003
  1551                           ;	Watchdog Timer Enable bit
  1552                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1553                           ;	Watchdog Timer Postscale Select bits
  1554                           ;	WDTPS = 32768, 1:32768
  1555   300003                     	org	3145731
  1556   300003  1E                 	db	30
  1557                           
  1558                           ; Padding undefined space
  1559   300004                     	org	3145732
  1560   300004  FF                 	db	255
  1561                           
  1562                           ;Config register CONFIG3H @ 0x300005
  1563                           ;	CCP2 MUX bit
  1564                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1565                           ;	PORTB A/D Enable bit
  1566                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1567                           ;	Low-Power Timer1 Oscillator Enable bit
  1568                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1569                           ;	MCLR Pin Enable bit
  1570                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1571   300005                     	org	3145733
  1572   300005  83                 	db	131
  1573                           
  1574                           ;Config register CONFIG4L @ 0x300006
  1575                           ;	Stack Full/Underflow Reset Enable bit
  1576                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1577                           ;	Single-Supply ICSP Enable bit
  1578                           ;	LVP = OFF, Single-Supply ICSP disabled
  1579                           ;	Extended Instruction Set Enable bit
  1580                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1581                           ;	Background Debugger Enable bit
  1582                           ;	DEBUG = 0x1, unprogrammed default
  1583   300006                     	org	3145734
  1584   300006  81                 	db	129
  1585                           
  1586                           ; Padding undefined space
  1587   300007                     	org	3145735
  1588   300007  FF                 	db	255
  1589                           
  1590                           ;Config register CONFIG5L @ 0x300008
  1591                           ;	Code Protection bit
  1592                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1593                           ;	Code Protection bit
  1594                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1595                           ;	Code Protection bit
  1596                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1597                           ;	Code Protection bit
  1598                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1599   300008                     	org	3145736
  1600   300008  0F                 	db	15
  1601                           
  1602                           ;Config register CONFIG5H @ 0x300009
  1603                           ;	Boot Block Code Protection bit
  1604                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1605                           ;	Data EEPROM Code Protection bit
  1606                           ;	CPD = OFF, Data EEPROM not code-protected
  1607   300009                     	org	3145737
  1608   300009  C0                 	db	192
  1609                           
  1610                           ;Config register CONFIG6L @ 0x30000A
  1611                           ;	Write Protection bit
  1612                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1613                           ;	Write Protection bit
  1614                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1615                           ;	Write Protection bit
  1616                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1617                           ;	Write Protection bit
  1618                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1619   30000A                     	org	3145738
  1620   30000A  0F                 	db	15
  1621                           
  1622                           ;Config register CONFIG6H @ 0x30000B
  1623                           ;	Configuration Register Write Protection bit
  1624                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1625                           ;	Boot Block Write Protection bit
  1626                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1627                           ;	Data EEPROM Write Protection bit
  1628                           ;	WRTD = OFF, Data EEPROM not write-protected
  1629   30000B                     	org	3145739
  1630   30000B  E0                 	db	224
  1631                           
  1632                           ;Config register CONFIG7L @ 0x30000C
  1633                           ;	Table Read Protection bit
  1634                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1635                           ;	Table Read Protection bit
  1636                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1637                           ;	Table Read Protection bit
  1638                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1639                           ;	Table Read Protection bit
  1640                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1641   30000C                     	org	3145740
  1642   30000C  0F                 	db	15
  1643                           
  1644                           ;Config register CONFIG7H @ 0x30000D
  1645                           ;	Boot Block Table Read Protection bit
  1646                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1647   30000D                     	org	3145741
  1648   30000D  40                 	db	64
  1649                           tosu	equ	0xFFF
  1650                           tosh	equ	0xFFE
  1651                           tosl	equ	0xFFD
  1652                           stkptr	equ	0xFFC
  1653                           pclatu	equ	0xFFB
  1654                           pclath	equ	0xFFA
  1655                           pcl	equ	0xFF9
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           prodh	equ	0xFF4
  1661                           prodl	equ	0xFF3
  1662                           indf0	equ	0xFEF
  1663                           postinc0	equ	0xFEE
  1664                           postdec0	equ	0xFED
  1665                           preinc0	equ	0xFEC
  1666                           plusw0	equ	0xFEB
  1667                           fsr0h	equ	0xFEA
  1668                           fsr0l	equ	0xFE9
  1669                           wreg	equ	0xFE8
  1670                           indf1	equ	0xFE7
  1671                           postinc1	equ	0xFE6
  1672                           postdec1	equ	0xFE5
  1673                           preinc1	equ	0xFE4
  1674                           plusw1	equ	0xFE3
  1675                           fsr1h	equ	0xFE2
  1676                           fsr1l	equ	0xFE1
  1677                           bsr	equ	0xFE0
  1678                           indf2	equ	0xFDF
  1679                           postinc2	equ	0xFDE
  1680                           postdec2	equ	0xFDD
  1681                           preinc2	equ	0xFDC
  1682                           plusw2	equ	0xFDB
  1683                           fsr2h	equ	0xFDA
  1684                           fsr2l	equ	0xFD9
  1685                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        39
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     24      79
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    keypad_get_value@value	PTR unsigned char  size(2) Largest target is 1
		 -> val(COMRAM[1]), 

    keypad_get_value@_keypad	PTR const struct . size(2) Largest target is 8
		 -> kaypad_1(COMRAM[8]), 

    keypad_initialize@_keypad	PTR const struct . size(2) Largest target is 8
		 -> kaypad_1(COMRAM[8]), 

    gpio_pin_read_logic@logic	PTR enum E2798 size(2) Largest target is 1
		 -> keypad_get_value@logic_btn(COMRAM[1]), button_read_state@Pin_Logic_Status(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config_t	PTR const struct . size(2) Largest target is 8
		 -> kaypad_1.keypad_colomns_pins(COMRAM[4]), kaypad_1(COMRAM[8]), 

    gpio_pin_write_logic@_pin_config_t	PTR const struct . size(2) Largest target is 8
		 -> kaypad_1.keypad_colomns_pins(COMRAM[4]), kaypad_1.keypad_row_pins(COMRAM[4]), kaypad_1(COMRAM[8]), relay_turn_off@relayy(COMRAM[1]), 
		 -> relay_turn_on@relayy(COMRAM[1]), relay_initialize@relayy(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), Dc_motor_stop@dc_motor_pin_2(COMRAM[1]), Dc_motor_stop@dc_motor_pin_1(COMRAM[1]), Dc_motor_turn_right@dc_motor_pin_2(COMRAM[1]), 
		 -> Dc_motor_turn_right@dc_motor_pin_1(COMRAM[1]), Dc_motor_turn_left@dc_motor_pin_2(COMRAM[1]), Dc_motor_turn_left@dc_motor_pin_1(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_2(COMRAM[1]), 
		 -> Dc_motor_initialize@dc_motor_pin_1(COMRAM[1]), 

    gpio_pin_direction_init@_pin_config_t	PTR const struct . size(2) Largest target is 8
		 -> kaypad_1.keypad_colomns_pins(COMRAM[4]), kaypad_1.keypad_row_pins(COMRAM[4]), kaypad_1(COMRAM[8]), relay_initialize@relayy(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_2(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_1(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_keypad_get_value
    _keypad_get_value->_gpio_pin_read_logic
    _keypad_get_value->_gpio_pin_write_logic
    _Application_initialize->_keypad_initialize
    _keypad_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10892
             _Application_initialize
                   _keypad_get_value
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                    14    10      4    5222
                                             10 COMRAM    14    10      4
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                 10     6      4     482
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _Application_initialize                               0     0      0    5670
                  _keypad_initialize
 ---------------------------------------------------------------------------------
 (2) _keypad_initialize                                   11     9      2    5670
                                             10 COMRAM    11     9      2
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    4153
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_init                              9     7      2    1037
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_initialize
     _keypad_initialize
       _gpio_pin_direction_init
       _gpio_pin_write_logic
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     18      4F       1       62.2%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      39        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Sep 21 15:08:23 2022

                                 l212 1594                                   l205 12BC  
                                 l305 13D0                                   l271 1624  
                                 l186 1172                                   l290 14BE  
                                 u800 1146                                   u801 1140  
                                 u810 1148                                   u820 118A  
                                 u900 1528                                   u821 1186  
                                 u901 1524                                   u750 1028  
                                 u830 11A8                                   u751 1024  
                                 u831 11A4                                   u760 1046  
                                 u840 11CA                                   u920 13F0  
                                 u761 1042                                   u841 11C6  
                                 u921 13EC                                   u770 1068  
                                 u930 1448                                   u914 157E  
                                 u771 1064                                   u931 1444  
                                 u915 157A                                   u940 14BC  
                                 u941 14B8                                   u854 11F2  
                                 u870 14D6                                   u950 12E4  
                                 u855 11EE                                   u871 14D2  
                                 u951 12E0                                   u784 1090  
                                 u864 1254                                   u880 14E8  
                                 u960 1324                                   u785 108C  
                                 u865 1250                                   u881 14E4  
                                 u961 1320                                   u794 10F2  
                                 u890 1506                                   u970 1378  
                                 u795 10EE                                   u891 1502  
                                 u971 1374                                   u980 13BA  
                                 u981 13B6                                   u990 13CE  
                                 u991 13CA                  keypad_initialize@ret 003A  
                                 _val 004F                                   _ret 001F  
                                 prod 000FF3                   led_initialize@F2876 0046  
                                 wreg 000FE8                 relay_initialize@F2870 0042  
                                l1501 1016                                  l1511 10D2  
                                l1503 1028                                  l1505 1046  
                                l1601 12E4                                  l1515 112E  
                                l1507 1068                                  l1531 11A8  
                                l1611 1312                                  l1603 12EC  
                                l1509 1070                                  l1517 1170  
                                l1541 1290                                  l1533 11CA  
                                l1525 1174                                  l1621 1378  
                                l1613 1324                                  l1605 12F4  
                                l1535 11D2                                  l1543 12BA  
                                l1527 1178                                  l1551 14C0  
                                l1623 13A6                                  l1615 133A  
                                l1607 12FC                                  l1631 13CE  
                                l1537 1234                                  l1529 118A  
                                l1561 1528                                  l1553 14C4  
                                l1617 1342                                  l1625 13A8  
                                l1609 1310                                  l1571 13DE  
                                l1563 1530                                  l1555 14D6  
                                l1627 13BA                                  l1619 1368  
                                l1581 1436                                  l1573 13F0  
                                l1565 1592                                  l1557 14E8  
                                l1629 13BC                                  l1583 1448  
                                l1591 14BC                                  l1575 13F8  
                                l1559 1506                                  l1585 1450  
                                l1577 1400                                  l1569 13D2  
                                l1905 15F4                                  l1499 1012  
                                l1587 14A8                                  l1579 1434  
                                l1595 1616                                  l1907 15F8  
                                l1917 12A4                                  l1589 14AA  
                                l1597 12BE                                  l1919 115A  
                                l1599 12D2                                  _LATA 000F89  
                                _LATB 000F8A                                  _LATC 000F8B  
                                _LATD 000F8C                                  _LATE 000F8D  
                                _main 15F4                                  fsr2h 000FDA  
                                indf2 000FDF                                  fsr1l 000FE1  
                                fsr2l 000FD9              ?_gpio_pin_direction_init 0028  
                                prodl 000FF3                                  start 0000  
                        ___param_bank 000000                  _gpio_pin_write_logic 1174  
                               ?_main 0028                   relay_turn_off@F2880 0040  
                               _PORTA 000F80                                 _PORTB 000F81  
                               _PORTC 000F82                                 _PORTD 000F83  
                               _PORTE 000F84                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                               _TRISD 000F95                                 _TRISE 000F96  
            __end_of_keypad_get_value 13D2                                 tablat 000FF5  
                               status 000FD8                       __initialization 1596  
                 keypad_get_value@ret 003B                          __end_of_main 1616  
               ?_gpio_pin_write_logic 0028               keypad_get_value@_keypad 0032  
            gpio_pin_read_logic@logic 002A                                ??_main 0040  
                       __activetblptr 000002                      led_turn_on@F2881 0045  
                       _tris_register 0015               ?_Application_initialize 0028  
                              clear_0 15BC             keypad_get_value@logic_btn 003D  
                              isa$std 000001                          __pdataCOMRAM 0001  
                        __mediumconst 0000                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                          __accesstop 0080               __end_of__initialization 15C2  
                       ___rparam_used 000001                ??_gpio_pin_write_logic 002B  
                      __pcstackCOMRAM 0028        __end_of_Application_initialize 1626  
            keypad_get_value@cnt_row1 0038              keypad_get_value@cnt_row2 0039  
                   led_turn_off@F2886 0044              Dc_motor_initialize@F2875 004E  
            Dc_motor_initialize@F2877 004D                     ?_keypad_get_value 0032  
                  ??_keypad_get_value 0036                            _btn_values 1001  
            keypad_initialize@_keypad 0032                               __Hparam 0000  
            keypad_initialize@cnt_row 0038                               __Lparam 0000  
                 _gpio_pin_read_logic 14C0                          __psmallconst 1000  
                             __pcinit 1596                               __ramtop 1000  
                             __ptext0 15F4                               __ptext1 12BE  
                             __ptext2 14C0                               __ptext3 1616  
                             __ptext4 13D2                               __ptext5 1174  
                             __ptext6 1012                  ?_gpio_pin_read_logic 0028  
                end_of_initialization 15C2                         __Lmediumconst 0000  
   gpio_pin_write_logic@_pin_config_t 0028                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc2 000FDE                 ??_gpio_pin_read_logic 002C  
                  relay_turn_on@F2875 0041                 keypad_get_value@value 0034  
             _gpio_pin_direction_init 1012                         __pidataCOMRAM 15CC  
                 start_initialization 1596                          _lat_register 000B  
                         __pbssCOMRAM 0040             ??_gpio_pin_direction_init 002A  
           gpio_pin_write_logic@logic 002A                           __smallconst 1000  
         keypad_initialize@cnt_column 0039              ??_Application_initialize 003D  
                  keypad_initialize@i 003B                    keypad_initialize@j 003C  
               led_toggle_logic@F2891 0043       __end_of_gpio_pin_direction_init 1174  
             gpio_pin_write_logic@ret 0031                             copy_data0 15AA  
                   _keypad_initialize 13D2                     keypad_get_value@i 003E  
                   keypad_get_value@j 003C                     keypad_get_value@k 003F  
                  Dc_motor_stop@F2900 0047                    Dc_motor_stop@F2898 0048  
                  ?_keypad_initialize 0032                gpio_pin_read_logic@ret 0031  
                            __Hrparam 0000                              __Lrparam 0000  
                 ??_keypad_initialize 0034                    __end_of_btn_values 1011  
         __end_of_gpio_pin_read_logic 1596             __end_of_keypad_initialize 14C0  
                            _kaypad_1 0020                      _keypad_get_value 12BE  
             Dc_motor_turn_left@F2884 004C               Dc_motor_turn_left@F2886 004B  
                            isa$xinst 000000  gpio_pin_direction_init@_pin_config_t 0028  
        __end_of_gpio_pin_write_logic 12BE              Dc_motor_turn_right@F2891 004A  
            Dc_motor_turn_right@F2893 0049                _Application_initialize 1616  
          keypad_get_value@cnt_column 003A            gpio_pin_direction_init@ret 0030  
    gpio_pin_read_logic@_pin_config_t 0028                         _port_register 0001  
